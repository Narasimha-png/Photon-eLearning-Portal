<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Test DashBoard</title>
   
    <style>
      #dash{
        display: flex;
        flex-direction: column;
        padding: 2rem;
        align-items: center;
        justify-content: center;
      }
      #home{
        position: absolute;
        left: 2%;
      }
      #nav{
        padding: 0.7rem;
        position: relative;
        background-color: antiquewhite;
        display: flex;
        justify-content: center;

      }

      #canvas{
        display: flex;
        align-items: center;
        justify-content: center;
        width: 95vw;
        height: 50vh;
      }

      #key{
        width: 100%;
        padding: 0.7rem;
        border: none;
        border-radius: 30px;
        background: linear-gradient( 90deg ,rgb(239, 239, 24) , rgb(43, 255, 110))
      }
      
    </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
  </head>
  <body>
    <div id="nav">
      <div id="home">
        <a href="/mocktests">
        <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-house-door" viewBox="0 0 16 16">
          <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146ZM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5Z"/>
        </svg>
      </a>
      </div>
      <div>
      <h4>DashBoard</h4>
    </div>
    </div>
    <div id="canvas">
    <canvas id="donutChart" width="300" height="300"></canvas>
  </div>
    <div id="dash">
    <p>Score <%=map.get("score")%></p>
    <p> Attempted : <%=map.get("attempted") %></p>
    <p>Unattempted : <%=map.get("unattempted") %></p>
    <p>Unvisited : <%= 160 - Number(map.get("attempted")) - Number( map.get("unattempted")) %></p>
    <p> Time : <%= map.get("time") %></p>
    <button id="key" onclick="gotokey()">View Key</button>
  </div>
  
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js" integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js" integrity="sha384-Rx+T1VzGupg4BHQYs2gCW9It+akI2MM/mndMCy36UVfodzcJcF0GGLxZIzObiEfa" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  localStorage.removeItem("myMap");
        localStorage.removeItem("question");
        localStorage.removeItem("min");
        localStorage.removeItem("sec");
  function gotokey(){
    const currentURL = new URL(window.location.href);
    const newURL = currentURL.pathname  + currentURL.search;
    const updatedurl = newURL.replace( "/viewresults" , "/key");
    console.log( newURL );
    location.href = updatedurl ;
  }
  // Get a reference to the canvas element
const ctx = document.getElementById("donutChart").getContext("2d");


const data = {
  labels: ["Attempted", "Correct", "Incorrect"],
  datasets: [
    {
      data: [ <%-map.get("attempted") %>, <%-map.get("score")%>, Number( <%-map.get("attempted") %>) - Number(<%-map.get("score")%>)], // Values for each segment
      backgroundColor: [ "#FFCE56" ,"#00ff00", "#FF0000"], 
      hoverBackgroundColor: ["#FFCE56" ,"#00ff00", "#FF0000"], // Hover colors
    },
  ],
};

// Configuration options for the chart
const options = {
  responsive: true,
  cutoutPercentage: 70, // Adjust this value to control the size of the hole in the donut
};

// Create the donut chart
const donutChart = new Chart(ctx, {
  type: "doughnut",
  data: data,
  options: options,
});

</script>
  </body>
</html>